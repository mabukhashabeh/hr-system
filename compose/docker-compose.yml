services:
  api:
    build: ../backend
    container_name: hr_system_api
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
      - frontend
    command: []

  frontend:
    container_name: hr_system_frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - default

  db:
    image: postgres:15
    container_name: hr_system_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-hr_system}
      - POSTGRES_USER=${POSTGRES_USER:-hr_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-hr_password}
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: hr_system_rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  celery:
    build: ../backend
    container_name: hr_system_celery
    volumes:
      - ../backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    command: celery -A config worker --loglevel=info

volumes:
  postgres_data:
  media_volume:
  rabbitmq_data: 